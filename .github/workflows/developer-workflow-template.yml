name: Developer Implementation

on:
  issues:
    types: [opened, labeled]

jobs:
  implement-feature:
    if: |
      contains(github.event.issue.labels.*.name, 'implementation') ||
      contains(github.event.issue.labels.*.name, 'feature') ||
      contains(github.event.issue.labels.*.name, 'bug')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Create feature branch
        run: |
          BRANCH_NAME="feature/issue-${{ github.event.issue.number }}"
          git checkout -b $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          
      - name: Prepare developer prompt
        run: |
          cat > /tmp/developer-prompt.txt << 'PROMPT_EOF'
          You are the Developer persona. Implement the following issue:
          
          Issue #${{ github.event.issue.number }}: ${{ github.event.issue.title }}
          
          ${{ github.event.issue.body }}
          
          Requirements:
          1. Implement the complete feature/fix as described
          2. Write comprehensive tests
          3. Ensure code follows best practices
          4. Add appropriate documentation
          5. Make sure all tests pass
          
          Create production-ready code with no TODOs or placeholders.
          PROMPT_EOF
          
      - name: Run SuperClaude Developer
        uses: anthropics/claude-code-github-action@main
        with:
          prompt-file: /tmp/developer-prompt.txt
          model: opus
          api-key: ${{ secrets.ANTHROPIC_API_KEY }}
          github-token: ${{ secrets.ORG_ADMIN_TOKEN }}
          working-directory: .
          flags: |
            --persona developer
            --mode implementation
            --complete
            --test
            
      - name: Commit changes
        run: |
          git config user.name "SuperClaude Developer"
          git config user.email "superclaude@code-orchestration.com"
          git add -A
          git commit -m "feat: Implement #${{ github.event.issue.number }} - ${{ github.event.issue.title }}"
          
      - name: Push branch
        run: |
          git push origin $BRANCH_NAME
          
      - name: Create Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ORG_ADMIN_TOKEN }}
          script: |
            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `feat: ${context.payload.issue.title}`,
              body: `
              ## Description
              This PR implements the requirements from #${context.payload.issue.number}
              
              ## Changes
              - Implementation completed by SuperClaude Developer persona
              - Tests added
              - Documentation updated
              
              ## Related Issue
              Closes #${context.payload.issue.number}
              
              ## Checklist
              - [ ] Code follows project standards
              - [ ] Tests are passing
              - [ ] Documentation is updated
              - [ ] Ready for review
              `,
              head: process.env.BRANCH_NAME,
              base: 'main',
              draft: false
            });
            
            // Add labels
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.data.number,
              labels: ['automated-pr', 'needs-review']
            });