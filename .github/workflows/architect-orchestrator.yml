name: Architect Orchestrator

on:
  issues:
    types: [opened]

jobs:
  check-service-request:
    if: contains(github.event.issue.labels.*.name, 'service-type')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: |
          npm install @octokit/rest
          
      - name: Set up environment
        run: |
          echo "Setting up environment variables"
          echo "ISSUE_NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV
          echo "ISSUE_TITLE=${{ github.event.issue.title }}" >> $GITHUB_ENV
          echo "ISSUE_BODY<<EOF" >> $GITHUB_ENV
          echo "${{ github.event.issue.body }}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
      - name: Parse issue content
        id: parse
        run: |
          # Extract service details from issue body
          SERVICE_NAME=$(echo "$ISSUE_BODY" | grep -A 1 "Service Name" | tail -1 | xargs)
          echo "service_name=$SERVICE_NAME" >> $GITHUB_OUTPUT
          
          # Create a structured prompt for SuperClaude
          cat > /tmp/architect-prompt.txt << 'PROMPT_EOF'
          Analyze this service request and provide a detailed technical specification:
          
          Issue #${{ github.event.issue.number }}: ${{ github.event.issue.title }}
          
          ${{ github.event.issue.body }}
          
          Please provide:
          1. Service Name: [exact name for the repository]
          2. Technology Stack: [language, framework, database]
          3. Architecture Pattern: [microservice, monolith, serverless, etc.]
          4. Key Components: [list main components]
          5. Implementation Features: [list of features to implement as separate issues]
          
          Format your response clearly so it can be parsed.
          PROMPT_EOF
          
      - name: Run SuperClaude Architect
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          ORG_ADMIN_TOKEN: ${{ secrets.ORG_ADMIN_TOKEN }}
        run: |
          node .github/scripts/run-superclaude.js architect /tmp/architect-prompt.txt create-service
          
      - name: Comment on issue with results
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ORG_ADMIN_TOKEN }}
          script: |
            const issueNumber = context.issue.number;
            const fs = require('fs');
            
            let responseText = 'Service creation initiated.';
            try {
              responseText = fs.readFileSync('/tmp/superclaude-response.txt', 'utf8');
            } catch (e) {
              console.log('Could not read response file');
            }
            
            const body = `
            ## 🏗️ Architect Analysis Complete
            
            The SuperClaude Architect has analyzed your service request and initiated the creation process.
            
            ### Analysis Results:
            ${responseText.substring(0, 2000)}
            
            ### Next Steps:
            - New repositories created in the organization
            - Implementation issues created in each repository
            - CI/CD pipelines configured
            
            The development phase will begin automatically once repositories are set up.
            `;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: body
            });